{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"practica3-1/","title":"Pr\u00e1ctica 3.1: Instalaci\u00f3n de Tomcat","text":""},{"location":"practica3-1/#jaime-grueso-martin","title":"Jaime Grueso Martin","text":""},{"location":"practica3-1/#indice","title":"Indice","text":"<ol> <li>Instalaci\u00f3n de Tomcat</li> <li>Despliegue Manual Mediante la GUI de Administraci\u00f3n</li> <li>Despliegue con Maven<ol> <li>Intalaci\u00f3n de Maven</li> <li>Configuraci\u00f3n de Maven</li> <li>Despliegue</li> </ol> </li> <li>Cuestiones</li> </ol>"},{"location":"practica3-1/#instalacion-de-tomcat","title":"Instalaci\u00f3n de Tomcat","text":"<p>Para la instalacion de Tomcat se ha elegido la versi\u00f3n 10 de Tomcat. Para empezar, se debe descarjar el JDK. Para ello, se ejecutar\u00e1 el siguiente comando:</p> <p></p> <p>Una vez haya finalizado la instalaci\u00f3n, se proceder\u00e1 a comprobar la versi\u00f3n instalada con el siguiente comando:</p> <p></p> <p>A continuaci\u00f3n, se proceder\u00e1 a la instalaci\u00f3n de Tomcat. Para ello, se ejecutar\u00e1 el siguiente comando:</p> <p></p> <p>Se proceder\u00e1 a la creaci\u00f3n de un usuario para Tomcat. Para ello, se deber\u00e1 modificar el archivo <code>tomcat-users.xml</code>. Deber\u00e1 quedar de la siguiente manera:</p> <p></p> <p>Una vez configurado el archivo, se proceder\u00e1 a reiniar el servicio de Tomcat con el comando <code>sudo systemctl restart tomcat</code>. Para comprobar que el servicio se ha iniciado correctamente, se ejecutar\u00e1 el comando <code>sudo systemctl status tomcat</code> y debera aparecer algo similar a lo siguiente:</p> <p></p>"},{"location":"practica3-1/#despliegue-manual-mediante-la-gui-de-administracion","title":"Despliegue Manual Mediante la GUI de Administraci\u00f3n","text":"<p>Se accederar\u00e1 a la direcci\u00f3n <code>http://localhost:8080/nombre_usuario/html</code> y deber\u00e1 aparecer la siguiente pantalla:</p> <p></p> <p>Una vez se haya comprobado que Tomcat se ha instalado correctamente, se proceder\u00e1 a intentar desplegar un un archivo <code>.war</code> en Tomcat. El archivo <code>.war</code> que se nos ha facilitado tiene errores, por lo que se proceder\u00e1 a crear un archivo <code>.war</code> con un proyecto de ejemplo.</p> <p>Desde el siguiente enlace se descargar\u00e1 un proyecto de ejemplo: <code>https://tomcat.apache.org/tomcat-6.0-doc/appdev/sample/</code></p> <p>Se buscar\u00e1 el archivo y se seleccionar\u00e1 para desplegar en Tomcat. Una vez hecho esto, se ve que se ha desplegado correctamente:</p> <p></p> <p>Y si se accede al archivo, se podr\u00e1 ver la siguiente pantalla:</p> <p></p>"},{"location":"practica3-1/#despliegue-con-maven","title":"Despliegue con Maven","text":""},{"location":"practica3-1/#instalacion-de-maven","title":"Instalaci\u00f3n de Maven","text":"<p>Para el despliegue con Maven, primeramente se deber\u00e1 instalar Maven.</p> <p></p>"},{"location":"practica3-1/#configuracion-de-maven","title":"Configuraci\u00f3n de Maven","text":"<p>Ahora se proceder\u00e1 a a\u00f1adir un nuevo usuario a al archivo <code>tomcat-users.xml</code> para poder desplegar con Maven. Deber\u00e1 quedar de la siguiente manera:</p> <p></p> <p>Hecho esto, se proceder\u00e1 a configurar Maven. Para ello, se deber\u00e1 modificar el archivo <code>settings.xml</code>. Deber\u00e1 quedar de la siguiente manera:</p> <p></p> <p>Ahora se clona el repositorio de ejemplo que se nos ha facilitado y se proceder\u00e1 a desplegarlo con Maven.</p> <p></p> <p>Y se editar\u00e1 el archivo <code>pom.xml</code> para a\u00f1adir la configuraci\u00f3n. Deber\u00e1 quedar de la siguiente manera:   </p> <p></p>"},{"location":"practica3-1/#despliegue","title":"Despliegue","text":"<p>Si todo ha ido bien, si se ejecuta el comando <code>mvn tomcat7:deploy</code> deber\u00e1 aparecer algo similar a lo siguiente:</p> <p></p> <p>Y si se accede a la direcci\u00f3n <code>http://localhost:8080/nombre_usuario/</code> deber\u00e1 aparecer el directorio del proyecto:</p> <p></p> <p>Si se accede al archivo, deber\u00e1 aparecer la siguiente pantalla:</p> <p></p>"},{"location":"practica3-1/#cuestiones","title":"Cuestiones","text":"<p>Hab\u00e9is visto que los archivos de configuraci\u00f3n que hemos tocado contienen contrase\u00f1as en texto plano, por lo que cualquiera con acceso a ellos obtendr\u00eda las credenciales de nuestras herramientas. En principio esto representa un gran riesgo de seguridad, \u00bfsabr\u00edas razonar o averig\u00fcar por qu\u00e9 esto est\u00e1 dise\u00f1ado de esta forma?</p> <p>Se debe a la simplicidad de configuraci\u00f3n y la suposici\u00f3n de que Tomcat se usar\u00e1 en entornos controlados y seguros. En producci\u00f3n, se recomienda evitar esta pr\u00e1ctica usando autenticaci\u00f3n externa.</p>"},{"location":"practica3-2/","title":"Practica 3.2: Despliegue de Aplicaciones con Node Express","text":""},{"location":"practica3-2/#jaime-grueso-martin","title":"Jaime Grueso Martin","text":""},{"location":"practica3-2/#indice","title":"Indice","text":"<ol> <li>Introducci\u00f3n</li> <li>Instalaci\u00f3n de Node.js, Express y Test de la Primera Aplicaci\u00f3n</li> <li>Despliegue de una Nueva Aplicaci\u00f3n</li> <li>Cuestiones</li> </ol>"},{"location":"practica3-2/#introduccion","title":"Introducci\u00f3n","text":"<p>En esta pr\u00e1ctica se proceder\u00e1 a el despliegue de aplicaciones con Node Express. </p> <p>Primeramente, se parar\u00e1 el servicio de Tomcat para evitar problemas a la hora de desplegar la aplicaci\u00f3n.</p> <p></p>"},{"location":"practica3-2/#instalacion-de-nodejs-express-y-test-de-la-primera-aplicacion","title":"Instalaci\u00f3n de Node.js, Express y Test de la Primera Aplicaci\u00f3n","text":"<p>Para instalar Node.js y NPM, se ejecutar\u00e1 el siguiente comando:</p> <p></p> <p>Para comprobar que se han instalado correctamente, se ejecutar\u00e1n el siguiente comando:</p> <p></p> <p></p> <p>A continuaci\u00f3n, se proceder\u00e1 a clonar un repositorio de GitHub con una aplicaci\u00f3n de ejemplo. Para ello, se ejecutar\u00e1 el siguiente comando y despu\u00e9s se acceder\u00e1 a la carpeta de la aplicaci\u00f3n:</p>"},{"location":"practica3-2/#despliegue-de-una-nueva-aplicacion","title":"Despliegue de una Nueva Aplicaci\u00f3n","text":"<p>Dentro de la carpeta de la aplicaci\u00f3n, se ejecutar\u00e1 el siguiente comando para instalar las dependencias de la aplicaci\u00f3n:</p> <p></p> <p>Como se aprecia hay un error en la instalaci\u00f3n de las dependencias, <code>sh: 1: nodemon: not found</code>. Para solucionar este error, se ejecutar\u00e1 el siguiente comando:</p> <p></p> <p>Una vez solucionado el error, se proceder\u00e1 a ejecutar la aplicaci\u00f3n con el siguiente comando:</p> <p></p> <p>Si se accede a la direcci\u00f3n <code>http://localhost:3000/</code>, se podr\u00e1 ver la siguiente pantalla:</p> <p></p>"},{"location":"practica3-2/#cuestiones","title":"Cuestiones","text":"<p>Cuando ejecut\u00e1is el comando npm run start, lo que est\u00e1is haciendo es ejecutar un script:</p> <p>\u00bfDonde podemos ver que script se est\u00e1 ejecutando?</p> <p>\u00bfQu\u00e9 comando est\u00e1 ejecutando?</p> <p>Cuando se ejecuta <code>npm run start</code>, el comando que se ejecuta est\u00e1 definido en el archivo <code>package.json</code>, en la secci\u00f3n <code>scripts</code>. Simplemente se abre <code>package.json</code> y se comprueba qu\u00e9 comando est\u00e1 asociado a <code>start</code>.</p>"},{"location":"practica3-4/","title":"Pr\u00e1ctica 3.4: Despliegue de una Aplicaci\u00f3n React en Netlify (PaaS)","text":""},{"location":"practica3-4/#jaime-grueso-martin","title":"Jaime Grueso Martin","text":""},{"location":"practica3-4/#indice","title":"Indice","text":"<ol> <li>Creaci\u00f3n de Nuestra Aplicaci\u00f3n</li> <li>Aplicaci\u00f3n para Netlify</li> <li>Proceso de Despliegue en Netlify<ol> <li>Despliegue Mediante CLI</li> <li>Despliegue Mediante Conexi\u00f3n con Github</li> </ol> </li> </ol>"},{"location":"practica3-4/#creacion-de-nuestra-aplicacion","title":"Creaci\u00f3n de Nuestra Aplicaci\u00f3n","text":"<p>Primeramente, se deber\u00e1 loggear en la m\u00e1quina anfitriona con SSH. Para ello, se ejecutar\u00e1 el siguiente comando:</p> <p></p> <p>Tras esto, se proceder\u00e1 a crear una carpeta en el escritorio que tendr\u00e1 tres archivos: <code>head.html</code>, <code>tail.html</code> y <code>aplicacion.js</code>. Para ello, se ejecutar\u00e1n los siguientes comandos:</p> <p></p> <p>Dentro de la carpeta, se han creado los archivos mencionados anteriormente y habr\u00e1 que a\u00f1adir el siguiente c\u00f3digo a cada uno de ellos:</p> <p></p> <p></p> <p></p> <p>Hecho esto, se podr\u00e1 ejecutar el comando <code>npm init</code> para inicializar el proyeto y nos pedir\u00e1 una serie de datos que deberemos rellenar. Y se ejecutar\u00e1 el comando <code>node aplicacion.js</code> para ejecutar la aplicaci\u00f3n. </p> <p></p> <p>Si se sabre una pesta\u00f1a del navegador y se accede a la direcci\u00f3n <code>http://localhost:8080/</code>, se podr\u00e1 ver la siguiente pantalla:</p> <p></p>"},{"location":"practica3-4/#aplicacion-para-netlify","title":"Aplicaci\u00f3n para Netlify","text":"<p>Para poder desplegar nuestra aplicaci\u00f3n en Netlify, se deber\u00e1 clonar el repositorio que se nos ha facilitado.</p> <p></p>"},{"location":"practica3-4/#proceso-de-despliegue-en-netlify","title":"Proceso de Despliegue en Netlify","text":"<p>Se desplegara\u00e1 la aplicaci\u00f3n en Netlify mediante dos m\u00e9todos: mediante CLI y mediante conexi\u00f3n con Github.</p> <p>Para ello la primera tarea ser\u00e1 el loggearse en la web de Netlify. Y se generar\u00e1 un token de acceso que se utilizar\u00e1 cuando se nos pida loggearnos desde la terminal.</p>"},{"location":"practica3-4/#despliegue-mediante-cli","title":"Despliegue Mediante CLI","text":"<p>Una vez se haya hecho el registro, se deber\u00e1 instalar el cliente de Netlify dentro de la carpeta de la aplicaci\u00f3n y se loggear\u00e1 en la cuenta de Netlify:</p> <p></p> <p></p> <p>Ahora se podr\u00e1 instalar npm en la aplicaci\u00f3n y se podr\u00e1 desplegar la aplicaci\u00f3n en Netlify con los siguientes comandos:</p> <p></p> <p></p> <p>Aqui se nos har\u00e1n algunas preguntas que se deben responder de la siguiente manera: Se crear\u00e1 y configurar\u00e1 un nuevo sitio El Team se dejar\u00e1 por defecto Y se le pone el nombre que se quiera al sitio y el directorio de despliegue ser\u00e1 <code>./build</code>.</p> <p></p> <p></p> <p>Si se accede a la direcci\u00f3n que se nos facilita, se podr\u00e1 ver la aplicaci\u00f3n desplegada en Netlify:</p> <p></p>"},{"location":"practica3-4/#despliegue-mediante-conexion-con-github","title":"Despliegue Mediante Conexi\u00f3n con Github","text":"<p>Para desplegar la aplicaci\u00f3n mediante conexi\u00f3n con Github, lo primero que se deber\u00e1 hacer es eliminar la web que hemos creado para evitar posibles conflictos.</p> <p></p> <p>Despu\u00e9s, se deber\u00e1 borrar el directorio que se clon\u00f3 anteriormente con el comando <code>rm -rf color-shades-generator</code>. </p> <p>Hecho esto, nos descargaremos el repositorio pero con el comando siguiente:</p> <p></p> <p>Se crear\u00e1 una carpeta nueva con el nombre de la pr\u00e1tica y se extraer\u00e1 el contenido del repositorio en ella.</p> <p></p> <p>Y nos colocaremos en la carpeta de la pr\u00e1ctica. Ahora se crear\u00e1 un repositorio en Github y se subir\u00e1n los archivos de la pr\u00e1ctica a \u00e9l.</p> <p></p> <p>Desde la web de Netlify, se seleccionar\u00e1 la opci\u00f3n de conectar con Github y se seleccionar\u00e1 el repositorio que se ha creado anteriormente.</p> <p></p> <p>Se seleccionar\u00e1 el repositorio:</p> <p></p> <p>Se seleccionar\u00e1 la rama principal y se comprobar\u00e1 que le nombre de la web no est\u00e9 en uso:</p> <p></p> <p>Y finalmente se desplegar\u00e1 la aplicaci\u00f3n:</p> <p></p> <p>Si se accede a la direcci\u00f3n que se nos facilita, se podr\u00e1 ver la aplicaci\u00f3n desplegada en Netlify:</p> <p></p> <p>Ahora se deber\u00e1 modificar el archivo <code>robots.txt</code> para indicar a que URLs del sitio se pueden acceder.</p> <p></p> <p>Se har\u00e1 un commit y un push de los cambios y en la pantalla de Netlify se podr\u00e1 ver que se ha desplegado la nueva versi\u00f3n de la aplicaci\u00f3n a la hora que se hizo el commit.</p> <p></p> <p></p> <p>Si se accede a https://jaimito-3-4.netlify.app/robots.txt, se podr\u00e1 ver el archivo <code>robots.txt</code> modificado:</p> <p></p> <p>Con esto se habr\u00e1 completado la pr\u00e1ctica.</p>"},{"location":"practica3-5/","title":"Pr\u00e1ctica 3.5: Despliegue de una aplicaci\u00f3n Flask (Python)","text":""},{"location":"practica3-5/#jaime-grueso-martin","title":"Jaime Grueso Martin","text":""},{"location":"practica3-5/#indice","title":"Indice","text":"<ol> <li>Prerrequisitos</li> <li>Procedimiento Completo Para el Despliegue</li> <li>Cuesti\u00f3n</li> </ol>"},{"location":"practica3-5/#prerrequisitos","title":"Prerrequisitos","text":"<p>Para esta pr\u00e1ctica se deben tener las siguientes herramientas instaladas en el sistema:     - Nginx     - Gunicorn     - Pipenv</p>"},{"location":"practica3-5/#procedimiento-completo-para-el-despliegue","title":"Procedimiento Completo Para el Despliegue","text":"<p>Como primer paso, se ha de instalr el gestor de paquetes de Python pip: </p> <p>Una vez instalado pip, se ha de instalar pipenv: </p> <p>Se crea un directorio para la aplicaci\u00f3n. Al crearla se apreciar\u00e1 que los permisos pertenecen a root. Para cambiarlos se ha de ejecutar el comando <code>sudo chown -R $USER:$USER /home/jaime/app</code>: <code>drwxr-xr-x  2 root root 4096 nov 21 15:53 flask_jaime</code></p> <p>Para ser cambiados se ejecutar\u00e1 el siguiente comando: </p> <p>Y se le cambiar\u00e1n los permisos para que al iniciar Nginx no haya problemas: </p> <p>Ahora, dentro del directorio creado con anterioridad se crear\u00e1 el archivo oculto <code>.env</code> </p> <p>En el archivo <code>.env</code> se a\u00f1adir\u00e1n las siguientes lineas: </p> <p>Se iniciar\u00e1 el entorno virtual y <code>Pipenv</code> cargar\u00e1 las dependencias del archivo <code>.env</code>:</p> <p></p> <p>Como se aprecia en la utima l\u00ednea de la captura, aparece el nombre de nuestro entorno virtual, lo cual significa que se ha iniciado correctamente.</p> <p>Hecho esto, se instalar\u00e1n las dependencias para la aplicaci\u00f3n: </p> <p>Se crear\u00e1n los archivos <code>app.py</code> y <code>wsgi.py</code> que contendr\u00e1n los siguientes codigos:  </p> <p>Se probar\u00e1 la aplicaci\u00f3n con el comando siguiente: </p> <p>Si todo ha ido bien, si se accede al enlace proporcionado se podr\u00e1 ver la aplicaci\u00f3n funcionando: </p> <p>Se comprobar\u00e1 ahora que Gunicorn funciona correctamente: </p> <p>Se tomar\u00e1 nota del path desde donde se ejectuta Gunicorn, para ello se ejecutar\u00e1 el siiguinte comandodentro de nuestro entorno virtual: </p> <p>Se saldr\u00e1 del entorno virtual con <code>deactivate</code>.</p> <p>Se iniciar\u00e1 Nginx si no estaba iniciado de antemano y se comprobar\u00e1 que sigue funcionando perfectamente: </p> <p>Se crear\u00e1 un archivo de configuraci\u00f3n para que systemd ejecute Gunicorn como otro servicio mas: </p> <p>Ahora se habilitar\u00e1 el servicio y se comprobar\u00e1 que se ha iniciado correctamente: </p> <p>Ahora se modifiar\u00e1 el archivo de configuraci\u00f3n de Nginx de la siguiente manera: </p> <p>Se crear\u00e1 el enlace simb\u00f3lico para que Nginx pueda acceder a los archivos de la aplicaci\u00f3n: </p> <p>Se comptobar\u00e1 que la configuraci\u00f3n de Nginx es correcta: </p> <p>Se editar\u00e1 el archivo <code>hosts</code> para que se pueda acceder a la aplicaci\u00f3n desde el navegador:</p> <p></p> <p>Se comprobar\u00e1 que la aplicaci\u00f3n funciona correctamente en el navegador: </p> <p>Ahora se deber\u00e1 repetir el proceso para un repositorio que se clonar\u00e1 de GitHub: </p> <p>Se crear\u00e1 el archivo <code>.env</code> con las variables de entorno necesarias: </p> <p>Se cambiar\u00e1n los permisos del directorio y los propietarios: </p> <p>Se iniciliazar\u00e1 el entorno virtual: </p> <p>Y se probar\u00e1 la aplicaci\u00f3n: </p> <p>Se comprobar\u00e1 que funciona correctamente: </p> <p>Se comprobar\u00e1 que Gunicorn funciona correctamente: </p> <p>Y se obtendr\u00e1 el path de Gunicorn: </p> <p>Se saldr\u00e1 del entorno virtual y se crear\u00e1 el archivo de configuraci\u00f3n para systemd: </p> <p>Se configurar\u00e1 Nginx para que pueda acceder a la aplicaci\u00f3n: </p> <p>Se habilitar\u00e1 el servicio y se har\u00e1 el enlace simb\u00f3lico: </p> <p>Una vez comprobada la configuraci\u00f3n de Nginx, se editar\u00e1 el archivo <code>hosts</code> para poder acceder a la aplicaci\u00f3n desde el navegador: </p> <p>Se comprobar\u00e1 que la aplicaci\u00f3n funciona correctamente: </p>"},{"location":"practica3-5/#cuestion","title":"Cuestion","text":"<p>Un servidor WSGI (Web Server Gateway Interface) act\u00faa como intermediario entre aplicaciones web escritas en Python  y servidores web como Apache o Nginx, traduciendo solicitudes HTTP en datos procesables por Python y devolviendo  respuestas al cliente. Permite compatibilidad entre frameworks, facilita el despliegue en producci\u00f3n y mejora  el manejo de m\u00faltiples solicitudes concurrentes de manera eficiente</p> <p>Con esto se da por finalizada la pr\u00e1ctica.</p>"}]}